C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEBUG) WL(2) PR(.\DP8051\DP8051_Ke
                    -il_951\Debug/main.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include "project.h"
  13          
  14          enum states {IDLE, BUSY, COLLISION};
  15          enum states currentState = IDLE;
  16          int waiting = 0;
  17          
  18          void changeState(enum states nextState) {
  19   1          if (nextState==IDLE) {
  20   2              IDLE_PIN_Write(1);
  21   2              BUSY_PIN_Write(0);
  22   2              COLLISION_PIN_Write(0);
  23   2          }
  24   1          else if (nextState==BUSY) {
  25   2              IDLE_PIN_Write(0);
  26   2              BUSY_PIN_Write(1);
  27   2              COLLISION_PIN_Write(0);
  28   2          }
  29   1          else if (nextState==COLLISION) {
  30   2              IDLE_PIN_Write(0);
  31   2              BUSY_PIN_Write(0);
  32   2              COLLISION_PIN_Write(1);
  33   2          }
  34   1          
  35   1          currentState = nextState;
  36   1      }
  37          
  38          CY_ISR(RX_HANDLER) {
  39   1          if (currentState==IDLE) {
  40   2              if (RECEIVE_Read()==1) {
  41   3                  waiting = 0;
  42   3                  changeState(BUSY);
  43   3              }
  44   2          }
  45   1          else if (currentState==BUSY) {
  46   2              if (RECEIVE_Read()==1) {
  47   3                  waiting = 1;
  48   3                  TIMER_WriteCounter(12720); //530 us
  49   3              }
  50   2              else {
  51   3                  waiting = 1;
  52   3                  TIMER_WriteCounter(196800); //8.2 ms
  53   3              }
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 2   

  54   2          }
  55   1          else if (currentState==COLLISION) {
  56   2              if (RECEIVE_Read()==0) {
  57   3                  waiting = 0;
  58   3                  changeState(BUSY);
  59   3              }
  60   2          }
  61   1      }
  62          
  63          CY_ISR(TIMER_HANDLER) {
  64   1          if (waiting) {
  65   2              if (RECEIVE_Read()==0) {
  66   3                  waiting = 0;
  67   3                  changeState(IDLE);
  68   3              }
  69   2              else {
  70   3                  waiting = 0;
  71   3                  changeState(COLLISION);
  72   3              }
  73   2          }
  74   1      }
  75          
  76          int main(void)
  77          {
  78   1          CyGlobalIntEnable; /* Enable global interrupts. */
  79   1      
  80   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  81   1          RX_INTERRUPT_StartEx(RX_HANDLER);
  82   1          TIMER_INTERRUPT_StartEx(TIMER_HANDLER);
  83   1          TIMER_Start();
  84   1      
  85   1          for(;;)
  86   1          {
  87   2              /* Place your application code here. */
  88   2          }
  89   1      }
  90          
  91          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _changeState (BEGIN)
                                           ; SOURCE LINE # 18
0000 900000      R     MOV     DPTR,#nextState
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 19
0005 900000      R     MOV     DPTR,#nextState
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 7011              JNZ     ?C0001
                                           ; SOURCE LINE # 20
000D 7F01              MOV     R7,#01H
000F 120000      E     LCALL   _IDLE_PIN_Write
                                           ; SOURCE LINE # 21
0012 7F00              MOV     R7,#00H
0014 120000      E     LCALL   _BUSY_PIN_Write
                                           ; SOURCE LINE # 22
0017 7F00              MOV     R7,#00H
0019 120000      E     LCALL   _COLLISION_PIN_Write
                                           ; SOURCE LINE # 23
001C 8032              SJMP    ?C0002
001E         ?C0001:
                                           ; SOURCE LINE # 24
001E 900000      R     MOV     DPTR,#nextState
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 B40111            CJNE    A,#01H,?C0003
                                           ; SOURCE LINE # 25
0027 7F00              MOV     R7,#00H
0029 120000      E     LCALL   _IDLE_PIN_Write
                                           ; SOURCE LINE # 26
002C 7F01              MOV     R7,#01H
002E 120000      E     LCALL   _BUSY_PIN_Write
                                           ; SOURCE LINE # 27
0031 7F00              MOV     R7,#00H
0033 120000      E     LCALL   _COLLISION_PIN_Write
                                           ; SOURCE LINE # 28
0036 8018              SJMP    ?C0002
0038         ?C0003:
                                           ; SOURCE LINE # 29
0038 900000      R     MOV     DPTR,#nextState
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
003D EF                MOV     A,R7
003E B4020F            CJNE    A,#02H,?C0002
                                           ; SOURCE LINE # 30
0041 7F00              MOV     R7,#00H
0043 120000      E     LCALL   _IDLE_PIN_Write
                                           ; SOURCE LINE # 31
0046 7F00              MOV     R7,#00H
0048 120000      E     LCALL   _BUSY_PIN_Write
                                           ; SOURCE LINE # 32
004B 7F01              MOV     R7,#01H
004D 120000      E     LCALL   _COLLISION_PIN_Write
                                           ; SOURCE LINE # 33
0050         ?C0002:
                                           ; SOURCE LINE # 35
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 4   

0050 900000      R     MOV     DPTR,#nextState
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      R     MOV     DPTR,#currentState
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
005A 22                RET     
             ; FUNCTION _changeState (END)

             ; FUNCTION RX_HANDLER (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
002B 900000      R     MOV     DPTR,#currentState
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 EF                MOV     A,R7
0031 7017              JNZ     ?C0007
                                           ; SOURCE LINE # 40
0033 120000      E     LCALL   RECEIVE_Read
0036 EF                MOV     A,R7
0037 6401              XRL     A,#01H
0039 7067              JNZ     ?C0016
                                           ; SOURCE LINE # 41
003B 900000      R     MOV     DPTR,#waiting
003E E4                CLR     A
003F F0                MOVX    @DPTR,A
0040 A3                INC     DPTR
0041 E4                CLR     A
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
0043 7F01              MOV     R7,#01H
0045 120000      R     LCALL   _changeState
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
0048 8058              SJMP    ?C0016
004A         ?C0007:
                                           ; SOURCE LINE # 45
004A 900000      R     MOV     DPTR,#currentState
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 5   

0050 B40133            CJNE    A,#01H,?C0010
                                           ; SOURCE LINE # 46
0053 120000      E     LCALL   RECEIVE_Read
0056 EF                MOV     A,R7
0057 B40116            CJNE    A,#01H,?C0011
                                           ; SOURCE LINE # 47
005A 900000      R     MOV     DPTR,#waiting
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
005F A3                INC     DPTR
0060 7401              MOV     A,#01H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
0063 7FB0              MOV     R7,#0B0H
0065 7E31              MOV     R6,#031H
0067 7D00              MOV     R5,#00H
0069 7C00              MOV     R4,#00H
006B 120000      E     LCALL   _TIMER_WriteCounter
                                           ; SOURCE LINE # 49
006E 8032              SJMP    ?C0016
0070         ?C0011:
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0070 900000      R     MOV     DPTR,#waiting
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
0075 A3                INC     DPTR
0076 7401              MOV     A,#01H
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 52
0079 7FC0              MOV     R7,#0C0H
007B 7E00              MOV     R6,#00H
007D 7D03              MOV     R5,#03H
007F 7C00              MOV     R4,#00H
0081 120000      E     LCALL   _TIMER_WriteCounter
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
0084 801C              SJMP    ?C0016
0086         ?C0010:
                                           ; SOURCE LINE # 55
0086 900000      R     MOV     DPTR,#currentState
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B EF                MOV     A,R7
008C B40213            CJNE    A,#02H,?C0016
                                           ; SOURCE LINE # 56
008F 120000      E     LCALL   RECEIVE_Read
0092 EF                MOV     A,R7
0093 700D              JNZ     ?C0016
                                           ; SOURCE LINE # 57
0095 900000      R     MOV     DPTR,#waiting
0098 E4                CLR     A
0099 F0                MOVX    @DPTR,A
009A A3                INC     DPTR
009B E4                CLR     A
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
009D 7F01              MOV     R7,#01H
009F 120000      R     LCALL   _changeState
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 6   

00A2         ?C0016:
00A2 D007              POP     AR7
00A4 D006              POP     AR6
00A6 D005              POP     AR5
00A8 D004              POP     AR4
00AA D003              POP     AR3
00AC D002              POP     AR2
00AE D001              POP     AR1
00B0 D000              POP     AR0
00B2 D0D0              POP     PSW
00B4 D000        E     POP     ?C?XPAGE1SFR
00B6 D086              POP     DPS
00B8 D084              POP     DPL1
00BA D085              POP     DPH1
00BC D082              POP     DPL
00BE D083              POP     DPH
00C0 D0F0              POP     B
00C2 D0E0              POP     ACC
00C4 32                RETI    
             ; FUNCTION RX_HANDLER (END)

             ; FUNCTION TIMER_HANDLER (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
002B 900000      R     MOV     DPTR,#waiting
002E E0                MOVX    A,@DPTR
002F FE                MOV     R6,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 4E                ORL     A,R6
0035 6022              JZ      ?C0020
                                           ; SOURCE LINE # 65
0037 120000      E     LCALL   RECEIVE_Read
003A EF                MOV     A,R7
003B 700F              JNZ     ?C0018
                                           ; SOURCE LINE # 66
003D 900000      R     MOV     DPTR,#waiting
0040 E4                CLR     A
0041 F0                MOVX    @DPTR,A
0042 A3                INC     DPTR
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 7   

0043 E4                CLR     A
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
0045 7F00              MOV     R7,#00H
0047 120000      R     LCALL   _changeState
                                           ; SOURCE LINE # 68
004A 800D              SJMP    ?C0020
004C         ?C0018:
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
004C 900000      R     MOV     DPTR,#waiting
004F E4                CLR     A
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 E4                CLR     A
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
0054 7F02              MOV     R7,#02H
0056 120000      R     LCALL   _changeState
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0059         ?C0020:
0059 D007              POP     AR7
005B D006              POP     AR6
005D D005              POP     AR5
005F D004              POP     AR4
0061 D003              POP     AR3
0063 D002              POP     AR2
0065 D001              POP     AR1
0067 D000              POP     AR0
0069 D0D0              POP     PSW
006B D000        E     POP     ?C?XPAGE1SFR
006D D086              POP     DPS
006F D084              POP     DPL1
0071 D085              POP     DPH1
0073 D082              POP     DPL
0075 D083              POP     DPH
0077 D0F0              POP     B
0079 D0E0              POP     ACC
007B 32                RETI    
             ; FUNCTION TIMER_HANDLER (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0000 D2AF              SETB    EA
0002 9044F4            MOV     DPTR,#044F4H
0005 74FD              MOV     A,#0FDH
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
0008 7E00        R     MOV     R6,#HIGH RX_HANDLER
000A 7F00        R     MOV     R7,#LOW RX_HANDLER
000C 120000      E     LCALL   _RX_INTERRUPT_StartEx
                                           ; SOURCE LINE # 82
000F 7E00        R     MOV     R6,#HIGH TIMER_HANDLER
0011 7F00        R     MOV     R7,#LOW TIMER_HANDLER
0013 120000      E     LCALL   _TIMER_INTERRUPT_StartEx
                                           ; SOURCE LINE # 83
0016 120000      E     LCALL   TIMER_Start
                                           ; SOURCE LINE # 85
C51 COMPILER V9.51   MAIN                                                                  12/12/2017 08:48:34 PAGE 8   

0019         ?C0021:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 88
0019 80FE              SJMP    ?C0021
001B 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    440    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
